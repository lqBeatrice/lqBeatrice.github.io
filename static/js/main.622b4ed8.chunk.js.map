{"version":3,"sources":["reportWebVitals.js","utils/index.ts","utils/http.ts","auth-provider.ts","context/auth-context.tsx","context/index.tsx","components/lib.tsx","utils/user.ts","components/id-select.tsx","components/user-select.tsx","screens/project-list/search-panel.tsx","components/pin.tsx","utils/use-optimistic-options.ts","utils/project.ts","utils/useUrlQueryParam.ts","screens/project-list/util.ts","screens/project-list/list.tsx","screens/project-list/index.tsx","screens/formlist/index.tsx","utils/task.ts","screens/kanban/util.ts","utils/epic.ts","screens/epic/util.ts","screens/epic/epic-modal.tsx","screens/epic/index.tsx","utils/task-type.ts","assets/task.svg","assets/bug.svg","screens/kanban/create-task.tsx","screens/kanban/kanban-column.tsx","utils/kanban.ts","components/task-type-select.tsx","screens/kanban/search-panel.tsx","components/epic-select.tsx","screens/kanban/task-modal.tsx","screens/kanban/create-kanban.tsx","screens/kanban/index.tsx","screens/project/index.tsx","screens/project/project-modal.tsx","components/project-popover.tsx","components/user-popover.tsx","assets/software-logo.svg","authenticated-app.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cleanObject","obj","_obj","Object","keys","forEach","o","value","val","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","useEffect","apiUrl","process","http","endpoint","data","token","configs","headers","config","Authorization","method","toUpperCase","qs","stringify","body","JSON","window","fetch","res","a","json","ok","Promise","reject","useHttp","user","useAuth","useCallback","localStorageKey","handleUserResponse","localStorage","setItem","logout","removeItem","bootstrapUser","getItem","AuthContext","React","createContext","undefined","displayName","AuthProvider","callback","children","useState","setUser","queryClient","useQueryClient","Provider","login","form","register","auth","clear","context","useContext","Error","AppProviders","QueryClientProvider","client","QueryClient","Row","styled","div","props","between","marginBottom","gap","ButtonNoPadding","Button","ErrorBox","error","message","Text","type","ScreenContainer","useUsers","param","useQuery","IdSelect","onChange","defaultOptionName","options","length","toNumber","Option","map","option","id","name","isNaN","Number","UserSelect","users","SearchPanel","setParam","style","display","justifyContent","Item","evt","target","personId","Pin","checked","onCheckedChange","restProps","count","useConfig","queryKey","onSuccess","invalidateQueries","onMutate","previousItems","getQueryData","setQueryData","old","onError","newItem","useDeleteConfig","filter","item","useAddConfig","useProject","useEditProject","useMutation","params","useEditConfig","useAddProject","useProjectDetail","enabled","Boolean","useUrlQueryParam","useSearchParams","searchParams","setSearchParams","useSetSearchUrlParam","useMemo","reduce","prev","key","get","setSearchParam","fromEntries","useProjectSearchParam","useProjectQueryKey","useProjectModal","projectCreate","setProjectCreate","editingProjectId","setEditingProjectId","editingProject","isLoading","projectModalOpen","open","close","startEdit","List","mutate","rowKey","pagination","columns","disabled","render","project","pin","sorter","b","localeCompare","to","String","dataIndex","find","created","dayjs","format","More","deleteMutate","useDeleteProject","overlay","onClick","deleteProject","ProjectListScreen","delay","debounceValue","setDebounceValue","time","setTimeout","clearTimeout","useDebounce","list","loading","dataSource","whyDidYouRender","FormSizeDemo","componentSize","setComponentSize","width","padding","margin","layout","initialValues","size","onValuesChange","label","Group","treeData","valuePropName","useTask","useProjectIdInUrl","useLocation","pathname","match","useProjectInUrl","useKanbanSearchParams","projectId","useKanbansQueryKey","useTaskSearchParams","typeId","processorId","tagId","useTasksQueryKey","useTaskModal","taskCreate","setTaskCreate","editingTaskId","setEditingTaskId","useTaskDetail","editingTask","taskModalOpen","useEpics","useEpicQueryKey","EpicModal","useAddEpic","mutateAsync","useForm","onFinish","values","onClose","resetFields","visible","forceRender","placement","closable","rules","required","placeholder","textAlign","htmlType","EpicScreen","epicModalOpen","setModalOpen","epics","deleteEpic","useDeleteEpic","tasks","overflow","itemLayout","renderItem","epic","Meta","Modal","confirm","content","okText","onOk","confirmDeleteEpic","description","start","end","task","epicId","useTaskTypes","CreateTask","kanbanId","inputMode","setInputMode","setName","addTask","useAddTask","toggle","mode","onSubmit","autoFocus","onBlur","onPressEnter","TaskTypeIcon","taskTypes","taskType","alt","src","taskIcon","bugIcon","TaskCard","keyword","arr","split","editStart","cursor","index","color","KanbanColumn","kanban","currentTasks","Container","TasksContainer","deleteKanban","useDeleteKanban","cancelText","TaskTypeSelect","types","EpicSelect","labelCol","span","wrapperCol","TaskModal","Form","useEditTask","editTask","editLoading","deleteTask","useDeleteTask","getFieldsValue","setFieldsValue","onCancel","confirmLoading","fontSize","CreateKanban","useAddKanban","addKanban","KanbanScreen","kanbans","useKanban","ProjectDetail","routeType","units","useRouteType","Aside","selectedKeys","Main","path","element","location","replace","aside","ProjectModal","mutateLoading","ProjectPopover","projects","refetch","pinProjects","ContentContainer","onVisibleChange","UserPopover","AuthenticatedApp","PageHeader","resetRoute","href","origin","Header","HeaderLeft","logo","console","log","HeaderRight","User","e","preventDefault","main","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.622b4ed8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useRef, useState } from \"react\";\n\nexport const isFalsy = (value: unknown) => (value === 0 ? false : !value);\n\nexport const cleanObject = (obj: object) => {\n  const _obj = { ...obj };\n  Object.keys(_obj).forEach((o) => {\n    // @ts-ignore\n    const val = _obj[o];\n    if (isFalsy(val)) {\n      // @ts-ignore\n      delete _obj[o];\n    }\n  });\n  return _obj;\n};\n\nexport const useMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport const useDebounce = <V>(value: V, delay?: number): any => {\n  const [debounceValue, setDebounceValue] = useState(value);\n\n  useEffect(() => {\n    const time = setTimeout(() => {\n      setDebounceValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(time);\n    };\n  }, [value, delay]);\n\n  return debounceValue;\n};\n\nexport const useArray = <T>(initialValue: T[]) => {\n  const [value, setValue] = useState(initialValue);\n  return {\n    value,\n    setValue,\n    add: (item: T) => setValue([...value, item]),\n    clear: () => setValue([]),\n    removeIndex: (index: number) => {\n      const copy = [...value];\n      copy.splice(index, 1);\n      setValue(copy);\n    },\n  };\n};\n\n// 动态文档标题\nexport const useDocumentTitle = (\n  title: string,\n  keepOnUnmount: boolean = true\n) => {\n  const oldTitle = useRef(document.title).current;\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    return () => {\n      if (!keepOnUnmount) {\n        // 不更新成初始\n        document.title = oldTitle;\n      }\n    };\n  }, [oldTitle, keepOnUnmount]);\n};\n\n// 动态设置组件挂载状态\nexport const useMountRef = () => {\n  const mountRef = useRef(false);\n\n  useEffect(() => {\n    mountRef.current = true;\n    return () => {\n      mountRef.current = false;\n    };\n  });\n\n  return mountRef;\n};\n","import qs from \"qs\";\nimport * as auth from \"auth-provider\";\nimport { useAuth } from \"context/auth-context\";\nimport { useCallback } from \"react\";\n\ninterface Config extends RequestInit {\n  token?: string;\n  data?: object;\n}\nconst apiUrl = process.env.REACT_APP_API_URL;\nexport const http = (\n  endpoint: string,\n  { data, token, headers, ...configs }: Config = {}\n) => {\n  const config = {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n    },\n    method: \"GET\",\n    ...configs,\n  };\n\n  if (config.method.toUpperCase() === \"GET\") {\n    endpoint += `?${qs.stringify(data)}`;\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n  return window.fetch(`${apiUrl}/${endpoint}`, config).then(async (res) => {\n    // if (res.status === 401) {\n    //   await auth.logout();\n    //   window.location.reload();\n    //   return Promise.reject({ message: \"请重新登录\" });\n    // }\n    const data = await res.json();\n    if (res.ok) {\n      return data;\n    } else {\n      return Promise.reject(data);\n    }\n  });\n};\n\nexport const useHttp = () => {\n  const { user } = useAuth();\n  return useCallback(\n    (...[endpoint, config]: Parameters<typeof http>) =>\n      http(endpoint, { ...config, token: user?.token }),\n    [user?.token]\n  );\n};\n","// 真实环境中如果使用firebase第三方服务的话，本文件不需要开发\n\nimport { User } from \"type/user\";\n\nconst localStorageKey = \"__auth_provider_token__\";\n\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\nexport const handleUserResponse = ({ user }: { user: User }) => {\n  window.localStorage.setItem(localStorageKey, user.token || \"\");\n  return user;\n};\n\nconst apiUrl = process.env.REACT_APP_API_URL;\nexport const login = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (res: Response) => {\n    if (res.ok) {\n      return handleUserResponse(await res.json());\n    } else {\n      return Promise.reject(await res.json());\n    }\n  });\n};\n\nexport const register = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (res: Response) => {\n    if (res.ok) {\n      return handleUserResponse(await res.json());\n    } else {\n      return Promise.reject(await res.json());\n    }\n  });\n};\n\nexport const logout = async () =>\n  window.localStorage.removeItem(localStorageKey);\n","import React, { useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useMount } from \"utils\";\nimport { http } from \"utils/http\";\nimport * as auth from \"../auth-provider\";\nimport { User } from \"type/user\";\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\nconst bootstrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      login: (form: AuthForm) => Promise<void>;\n      register: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\n\nAuthContext.displayName = \"AuthContext\";\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const queryClient = useQueryClient();\n  // point free 如果回调函数的参数和里面函数的参数是一样的就可以消参\n  // user => setUser(user) ====》 setUser\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () => auth.logout().then(() => {\n    queryClient.clear();\n    setUser(null);\n  });\n\n  useMount(() => {\n    bootstrapUser().then(setUser);\n  });\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n  return context;\n};\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { AuthProvider } from \"./auth-context\";\n\nexport const AppProviders = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <QueryClientProvider client={new QueryClient()}>\n      <AuthProvider>{children}</AuthProvider>\n    </QueryClientProvider>\n  );\n};\n","/*\n * @Author: your name\n * @Date: 2021-06-16 14:25:58\n * @LastEditTime: 2021-09-12 21:35:04\n * @LastEditors: your name\n * @Description: In User Settings Edit\n * @FilePath: /react-jira/src/components/lib.tsx\n */\nimport styled from \"@emotion/styled\";\nimport { Button, Spin, Typography } from \"antd\";\n// import { DevTools } from \"jira-dev-tool\";\n\nexport const Row = styled.div<{\n  gap?: number | boolean;\n  between?: boolean;\n  marginBottom?: number;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n\n  > * {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    margin-right: ${(props) =>\n    typeof props.gap === \"number\"\n      ? props.gap + \"rem\"\n      : props.gap\n        ? \"2rem\"\n        : undefined};\n  }\n`;\n\nconst FullPage = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FullPageLoading = () => (\n  <FullPage>\n    <Spin size={\"large\"} />\n  </FullPage>\n);\n\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => (\n  <FullPage>\n    {/* <DevTools /> */}\n    <ErrorBox error={error} />\n  </FullPage>\n);\n\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n\nconst isError = (value: any): value is Error => value?.message\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>;\n  }\n  return null\n}\n\nexport const ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import { useHttp } from \"utils/http\";\nimport { cleanObject } from \"utils/index\";\nimport { User } from \"type/user\";\nimport { useQuery } from \"react-query\";\n\nexport const useUsers = (param?: Partial<User>) => {\n  const client = useHttp();\n  return useQuery<User[]>(\n    ['users', param],\n    () => client('users', { data: cleanObject(param || {}) })\n  )\n  // const { run, ...result } = useAsync<User[]>();\n\n  // useEffect(() => {\n  //   run(client(\"users\", { data: cleanObject(param || {}) }));\n  // }, [param, client, run]);\n\n  // return result;\n};\n","import { Select } from \"antd\";\nimport React from \"react\";\nimport { Row } from \"type\";\n\ntype SelectProps = React.ComponentProps<typeof Select>;\n\ninterface IdSelectProps\n  extends Omit<SelectProps, \"value\" | \"options\" | \"onChange\"> {\n  value?: Row | null | undefined;\n  onChange?: (value?: number) => void;\n  defaultOptionName?: string;\n  options?: { name: string; id: number }[];\n}\n\nexport const IdSelect = (props: IdSelectProps) => {\n  const { value, onChange, defaultOptionName, options } = props;\n  return (\n    <Select\n      value={options?.length ? toNumber(value) : 0}\n      onChange={(value) => onChange?.(toNumber(value) || undefined)}\n    >\n      {defaultOptionName ? (\n        <Select.Option value={0}>{defaultOptionName}</Select.Option>\n      ) : null}\n      {options?.map((option) => (\n        <Select.Option key={option.id} value={option.id}>\n          {option.name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nconst toNumber = (value: unknown) => (isNaN(Number(value)) ? 0 : Number(value));\n","import React from \"react\";\nimport { useUsers } from \"utils/user\";\nimport { IdSelect } from \"./id-select\";\n\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: users } = useUsers();\n  return <IdSelect options={users || []} {...props} />;\n};\n","import { Form, Input } from \"antd\";\nimport { UserSelect } from \"components/user-select\";\nimport { User } from \"type/user\";\nimport { Project } from \"type/project\";\ninterface SearchPanelProps {\n  users: User[];\n  param: Partial<Pick<Project, \"name\" | \"personId\">>;\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\n}\n\nexport const SearchPanel = ({ users, param, setParam }: SearchPanelProps) => {\n  return (\n    <Form style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n      <Form.Item>\n        <Input\n          type=\"text\"\n          value={param.name}\n          onChange={(evt) =>\n            setParam({\n              ...param,\n              name: evt.target.value,\n            })\n          }\n        />\n      </Form.Item>\n      <Form.Item>\n        <UserSelect\n          value={param.personId}\n          options={users}\n          defaultOptionName={\"负责人\"}\n          onChange={(value) =>\n            setParam({\n              ...param,\n              personId: value,\n            })\n          }\n        />\n      </Form.Item>\n    </Form>\n  );\n};\n","import Rate from \"antd/lib/rate\";\nimport React from \"react\";\n\ninterface PinProps extends React.ComponentProps<typeof Rate> {\n  checked: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nexport const Pin = (props: PinProps) => {\n  const { checked, onCheckedChange, ...restProps } = props;\n  return (\n    <Rate\n      count={1}\n      value={checked ? 1 : 0}\n      onChange={(value) => onCheckedChange?.(!!value)}\n      {...restProps}\n    />\n  );\n};\n","import { QueryKey, useQueryClient } from \"react-query\";\n\nexport const useConfig = (queryKey: QueryKey, callback: (target: any, old?: any) => any) => {\n    const queryClient = useQueryClient();\n    return {\n        onSuccess: () => queryClient.invalidateQueries(queryKey),\n        async onMutate(target) {\n            // 保存修改前的数据 用于数据回滚\n            const previousItems = queryClient.getQueryData(queryKey);\n            queryClient.setQueryData(queryKey, (old) => {\n                return callback(target, old)\n            })\n            return { previousItems }\n        },\n        // 如果执行报错，就回滚到之前的数据\n        onError: (error: any, newItem: any, context) => {\n            queryClient.setQueryData(queryKey, (context as { previousItems: any }).previousItems)\n        }\n\n    }\n}\n\nexport const useDeleteConfig = (queryKey) => useConfig(queryKey, (target, old) => old?.filter(item => item.id !== target.id) || [])\nexport const useEditConfig = (queryKey) => useConfig(queryKey, (target, old) => old?.map(item => item.id === target.id ? { ...item, ...target } : item) || [])\nexport const useAddConfig = (queryKey) => useConfig(queryKey, (target, old) => old ? [...old, target] : [])\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Project } from \"type/project\";\nimport { cleanObject } from \"utils\";\nimport { useHttp } from \"./http\";\nimport { useAddConfig, useEditConfig, useDeleteConfig } from \"./use-optimistic-options\";\n\nexport const useProject = (param?: Partial<Project>) => {\n  // const { run,  ...result } = useAsync<Project[]>();\n  const client = useHttp();\n  // const fetchProject = useCallback(\n  //   () => client(\"projects\", { data: cleanObject(param || {}) }),\n  //   [param, client]\n  // );\n  // useEffect(() => {\n  //   run(fetchProject(), fetchProject);\n  // }, [param, fetchProject, run]);\n\n  return useQuery<Project[]>(['projects', param], () => client('projects', { data: cleanObject(param || {}) }))\n};\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects/${params.id}`, {\n        method: \"PATCH\",\n        data: params,\n      }),\n    useEditConfig(queryKey)\n  )\n};\n\nexport const useAddProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects`, {\n        method: \"POST\",\n        data: params,\n      }),\n    useAddConfig(queryKey)\n  )\n};\n\nexport const useDeleteProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`projects/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  )\n};\n\nexport const  useProjectDetail = (id?: number) => {\n  const client = useHttp()\n  return useQuery(\n    ['project', { id }],\n    () => client(`projects/${id}`),\n    {\n      enabled: Boolean(id)\n    }\n  )\n}\n","import { useMemo } from \"react\";\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\nimport { cleanObject } from \"utils\";\n\n// 返回页面URL中指定键的参数值\n// 问题 1\n// 返回是不仅要包括当前url的参数键值对，还需要返回改变参数的方法setSearchParams\n// setSearchParams 用来改变url上的参数值\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\n  const [searchParams] = useSearchParams();\n  const setSearchParams = useSetSearchUrlParam();\n  // 将数组转换成键值对\n  return [\n    // 问题 2\n    // prev: [x: string]: string; searchParams.get(next)返回的类型是string|null\n    // 所以对key赋值的时要判断null并置''\n    // 问题 3\n    // reduce这里返回的类型是{}，但是不符合真正的类型，需要手动将它变成\n    // { [key in string]: string }\n    // 使用useMemo防止无限循环\n    useMemo(\n      () =>\n        keys.reduce((prev, key) => {\n          return {\n            ...prev,\n            [key]: searchParams.get(key) || \"\",\n          };\n        }, {} as { [key in K]: string }),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [searchParams]\n    ),\n    (params: Partial<{ [key in string]: unknown }>) => {\n      return setSearchParams(params)\n    }\n    // 问题 4\n    // 对于tuple类型，ts会将里面的元素类型统一化，所以当出现不同类型时就会用|来涵盖所有类型\n    // 这样显得类型很乱，通常对于这种问题可以在后面添加 as const解决，添加之后的类型就时特定的了\n  ] as const;\n};\n\nexport const useSetSearchUrlParam = () => {\n  const [searchParams, setSearchParam] = useSearchParams();\n  return (params: { [key in string]: unknown }) => {\n    const o = cleanObject({\n      ...Object.fromEntries(searchParams),\n      ...params,\n    }) as URLSearchParamsInit;\n    return setSearchParam(o);\n  }\n}\n","import { useMemo, useState } from \"react\";\nimport { useProjectDetail } from \"utils/project\";\nimport { useUrlQueryParam } from \"utils/useUrlQueryParam\";\nimport { useSetSearchUrlParam } from \"utils/useUrlQueryParam\";\n\nexport const useProjectSearchParam = () => {\n  const [param, setParam] = useUrlQueryParam([\"name\", \"personId\"]);\n  return [\n    useMemo(() => {\n      return {\n        ...param,\n        personId: Number(param.personId) || undefined,\n      };\n    }, [param]),\n    setParam,\n  ] as const;\n};\n\nexport const useProjectQueryKey = () => {\n  const [params] = useProjectSearchParam();\n  return ['projects', params]\n}\n\nexport const useProjectModal = () => {\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam(['projectCreate'])\n  const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam(['editingProjectId'])\n\n  // 获取详情信息\n  const { data: editingProject, isLoading } = useProjectDetail(\n    Number(editingProjectId)\n  );\n\n  const setSearchParams = useSetSearchUrlParam();\n\n  const open = () => {\n    setProjectCreate({ projectCreate: true })\n  }\n\n  const close = () => setSearchParams({ projectCreate: \"\", editingProjectId: \"\" });\n  \n  const startEdit = (id: number) => {\n    setEditingProjectId({ editingProjectId: id })\n  }\n\n  return {\n    projectModalOpen: projectCreate === 'true' || Boolean(editingProjectId),\n    open,\n    close,\n    startEdit,\n    isLoading,\n    editingProject\n  }\n}\n","import { Dropdown, Menu, Table, TableProps } from \"antd\";\nimport { User } from \"type/user\";\nimport { Project } from \"type/project\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport { Pin } from \"components/pin\";\nimport { useDeleteProject, useEditProject } from \"utils/project\";\nimport { ButtonNoPadding } from \"components/lib\";\nimport { useProjectModal, useProjectQueryKey } from \"./util\";\ninterface ListProps extends TableProps<Project> {\n  users: User[];\n}\nexport const List = ({ users, ...props }: ListProps) => {\n  const { mutate } = useEditProject(useProjectQueryKey());\n  const mutateProject = (id: number) => (pin: boolean) =>\n    mutate({ id, pin });\n\n  return (\n    <Table\n      rowKey={\"id\"}\n      pagination={false}\n      columns={[\n        {\n          title: <Pin checked={true} disabled={true} />,\n          render: (value, project) => {\n            return (\n              <Pin\n                checked={project.pin}\n                onCheckedChange={mutateProject(project.id)}\n              />\n            );\n          },\n        },\n        {\n          title: \"名称\",\n          sorter: (a, b) => a.name.localeCompare(b.name),\n          render: (value, project) => {\n            return <Link to={String(project.id)}>{project.name}</Link>;\n          },\n        },\n        {\n          title: \"部门\",\n          dataIndex: \"organization\",\n        },\n        {\n          title: \"负责人\",\n          render(value, project) {\n            return (\n              <span>\n                {users.find((user) => user.id === project.personId)?.name ||\n                  \"未知\"}\n              </span>\n            );\n          },\n        },\n        {\n          title: \"创建时间\",\n          render(value, project) {\n            return (\n              <span>\n                {project.created\n                  ? dayjs(project.created).format(\"YYYY-MM-DD\")\n                  : \"无\"}\n              </span>\n            );\n          },\n        },\n        {\n          render(value, project) {\n            return (\n              <More project={project} />\n            );\n          },\n        },\n      ]}\n      {...props}\n    ></Table>\n  );\n};\n\nconst More = ({ project }: { project: Project }) => {\n  const { mutate: deleteMutate } = useDeleteProject(useProjectQueryKey());\n  const { startEdit } = useProjectModal();\n  const editProject = (id: number) => () => startEdit(id);\n  const deleteProject = (id: number) => () => deleteMutate({ id });\n\n  return (\n    <Dropdown overlay={\n      <Menu>\n        <Menu.Item>\n          <ButtonNoPadding type={\"link\"} key={'edit'} onClick={editProject(project.id)}>编辑</ButtonNoPadding>\n        </Menu.Item>\n        <Menu.Item>\n          <ButtonNoPadding type={\"link\"} key={'delete'} onClick={deleteProject(project.id)}>删除</ButtonNoPadding>\n        </Menu.Item>\n      </Menu>\n    }>\n      <ButtonNoPadding type={\"link\"}>...</ButtonNoPadding>\n    </Dropdown>\n  )\n}\n","import { SearchPanel } from \"./search-panel\";\nimport { List } from \"./list\";\nimport { useDocumentTitle } from \"../../utils/index\";\nimport { useDebounce } from \"../../utils\";\nimport { useProject } from \"utils/project\";\nimport { useProjectSearchParam, useProjectModal} from \"./util\";\nimport { useUsers } from \"utils/user\";\nimport {\n  ButtonNoPadding,\n  ErrorBox,\n  Row,\n  ScreenContainer,\n} from \"components/lib\";\n\nexport const ProjectListScreen = () => {\n  useDocumentTitle(\"项目列表\");\n\n  const [param, setParam] = useProjectSearchParam();\n  const { isLoading, error, data: list } = useProject(\n    useDebounce(param, 2000)\n  );\n  const { data: users } = useUsers();\n\n  const { open } = useProjectModal();\n\n  return (\n    <ScreenContainer>\n      <Row between={true}>\n        <h1>项目列表</h1>\n        <ButtonNoPadding onClick={open} type={\"link\"}>\n          创建项目\n        </ButtonNoPadding>\n      </Row>\n      <SearchPanel users={users || []} param={param} setParam={setParam} />\n      <ErrorBox error={error} />\n      <List loading={isLoading} users={users || []} dataSource={list || []} />\n    </ScreenContainer>\n  );\n};\n\nProjectListScreen.whyDidYouRender = false;\n","/*\n * @Author: your name\n * @Date: 2021-09-12 21:31:17\n * @LastEditTime: 2021-09-12 21:44:48\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /react-jira/src/screens/formlist/index.tsx\n */\nimport React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  Radio,\n  Select,\n  Cascader,\n  DatePicker,\n  InputNumber,\n  TreeSelect,\n  Switch,\n} from 'antd';\n\ntype SizeType = Parameters<typeof Form>[0]['size'];\n\nconst FormSizeDemo = () => {\n  const [componentSize, setComponentSize] = useState<SizeType | 'default'>('default');\n  const onFormLayoutChange = ({ size }: { size: SizeType }) => {\n    setComponentSize(size);\n  };\n  return (\n      <Form\n        style={{width: '60%', padding: 24, margin: '0 auto'}}\n        // labelCol={{ span: 4 }}\n        // wrapperCol={{ span: 14 }}\n        layout=\"horizontal\"\n        initialValues={{ size: componentSize }}\n        onValuesChange={onFormLayoutChange}\n        size={componentSize as SizeType}\n      >\n        <Form.Item label=\"Form Size\" name=\"size\">\n          <Radio.Group>\n            <Radio.Button value=\"small\">Small</Radio.Button>\n            <Radio.Button value=\"default\">Default</Radio.Button>\n            <Radio.Button value=\"large\">Large</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label=\"Input\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Select\">\n          <Select>\n            <Select.Option value=\"demo\">Demo</Select.Option>\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"TreeSelect\">\n          <TreeSelect\n            treeData={[\n              { title: 'Light', value: 'light', children: [{ title: 'Bamboo', value: 'bamboo' }] },\n            ]}\n          />\n        </Form.Item>\n        <Form.Item label=\"Cascader\">\n          <Cascader\n            options={[\n              {\n                value: 'zhejiang',\n                label: 'Zhejiang',\n                children: [\n                  {\n                    value: 'hangzhou',\n                    label: 'Hangzhou',\n                  },\n                ],\n              },\n            ]}\n          />\n        </Form.Item>\n        <Form.Item label=\"DatePicker\">\n          <DatePicker />\n        </Form.Item>\n        <Form.Item label=\"InputNumber\">\n          <InputNumber />\n        </Form.Item>\n        <Form.Item label=\"Switch\" valuePropName=\"checked\">\n          <Switch />\n        </Form.Item>\n        <Form.Item label=\"Button\">\n          <Button>Button</Button>\n        </Form.Item>\n      </Form>\n  );\n};\n\nexport default FormSizeDemo;","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { useHttp } from \"./http\";\nimport { cleanObject } from \"./index\";\nimport { Task } from \"../type/task\";\nimport { useDeleteConfig } from \"./use-optimistic-options\";\n\nexport const useTask = (param?: Partial<Task>) => {\n    const client = useHttp();\n    return useQuery<Task[]>(['tasks', param],\n        () => client('tasks', {\n            data: cleanObject(param || {})\n        })\n    )\n};\n\nexport const useTaskDetail = (id?: number) => {\n    const client = useHttp();\n    return useQuery(\n        ['tasks', { id }],\n        () => client(`tasks/${id}`),\n        {\n            enabled: Boolean(id)\n        }\n    )\n}\n\nexport const useDeleteTask = (queryKey: QueryKey) => {\n    const client = useHttp();\n    return useMutation(\n        ({ id }: { id: number }) =>\n            client(`tasks/${id}`, {\n                method: \"DELETE\",\n            }),\n        useDeleteConfig(queryKey)\n    )\n}\n\nexport const useAddTask = (queryKey: QueryKey) => {\n    const client = useHttp();\n    return useMutation(\n        (params: Partial<Task>) =>\n            client(`tasks`, {\n                method: \"POST\",\n                data: params\n            }),\n        useDeleteConfig(queryKey)\n    )\n}\n\nexport const useEditTask = (queryKey: QueryKey) => {\n    const client = useHttp();\n    return useMutation(\n        (params: Partial<Task>) =>\n            client(`tasks/${params.id}`, {\n                method: \"PATCH\",\n                data: params\n            }),\n        useDeleteConfig(queryKey)\n    )\n}\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router';\nimport { useTaskDetail } from 'utils/task';\nimport { useSetSearchUrlParam, useUrlQueryParam } from 'utils/useUrlQueryParam';\nimport { useProjectDetail } from '../../utils/project';\n\nexport const useProjectIdInUrl = () => {\n    const { pathname } = useLocation();\n    const id = pathname.match(/projects\\/(\\d+)/)?.[1]\n    return Number(id);\n}\n\nexport const useProjectInUrl = () => useProjectDetail(useProjectIdInUrl())\n\n// 统一用param的方式查询看板和task\n\nexport const useKanbanSearchParams = () => ({ projectId: useProjectIdInUrl() })\nexport const useKanbansQueryKey = () => [\"kanbans\", useKanbanSearchParams()];\n\nexport const useTaskSearchParams = () => {\n    const projectId = useProjectIdInUrl();\n    const [param, setParam] = useUrlQueryParam([\n        \"name\",\n        \"typeId\",\n        \"processorId\",\n        \"tagId\"\n    ]);\n    return useMemo(\n        () => ({\n            projectId,\n            typeId: Number(param.typeId) || undefined,\n            processorId: Number(param.processorId) || undefined,\n            tagId: Number(param.tagId) || undefined,\n            name: param.name\n        }),\n        [projectId, param]\n    )\n};\nexport const useTasksQueryKey = () => [\"tasks\", useTaskSearchParams()];\n\n// 看板弹框\nexport const useTaskModal = () => {\n    const [{ taskCreate }, setTaskCreate] = useUrlQueryParam(['taskCreate']);\n    const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam(['editingTaskId']);\n    const { data: editingTask, isLoading } = useTaskDetail((Number(editingTaskId)))\n\n    const setSearchParams = useSetSearchUrlParam();\n\n    const open = () => {\n        setTaskCreate({ taskCreate: true })\n    }\n\n    const close = () => setSearchParams({ taskCreate: \"\", editingTaskId: \"\" });\n\n    const startEdit = (id: number) => {\n        setEditingTaskId({ editingTaskId: id })\n    }\n\n    return {\n        taskModalOpen: taskCreate === 'true' || Boolean(editingTaskId),\n        open,\n        close,\n        startEdit,\n        editingTask,\n        editingTaskId,\n        isLoading\n    }\n}\n","import { useHttp } from \"utils/http\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Epic } from \"type/epic\";\nimport { useAddConfig, useDeleteConfig } from \"./use-optimistic-options\";\n\nexport const useEpics = (param?: Partial<Epic>) => {\n    const client = useHttp();\n\n    return useQuery<Epic[]>([\"epics\", param], () =>\n        client(\"epics\", { data: param })\n    );\n};\n\nexport const useAddEpic = (queryKey: QueryKey) => {\n    const client = useHttp();\n    return useMutation(\n        (params: Partial<Epic>) =>\n            client(`epics`, {\n                method: \"POST\",\n                data: params\n            }),\n        useAddConfig(queryKey)\n    )\n}\n\nexport const useDeleteEpic = (queryKey: QueryKey) => {\n    const client = useHttp();\n    return useMutation(\n        ({ id }: { id: number }) =>\n            client(`epics/${id}`, {\n                method: \"DELETE\",\n            }),\n        useDeleteConfig(queryKey)\n    )\n}\n","import { useProjectIdInUrl } from \"../../screens/kanban/util\";\n\nexport const useEpicSearchParam = () => ({projectId: useProjectIdInUrl()})\n\nexport const useEpicQueryKey = () => ['epics', useEpicSearchParam()]","import { Drawer, Form, Input, Button, DrawerProps } from 'antd';\nimport { useForm } from 'antd/lib/form/Form';\nimport { useEffect } from 'react';\nimport { ErrorBox } from '../../components/lib';\nimport { useAddEpic } from '../../utils/epic';\nimport { useProjectIdInUrl } from '../kanban/util';\nimport { useEpicQueryKey } from './util';\n\nexport const EpicModal = (props: Pick<DrawerProps, \"visible\"> & { onClose: () => void }) => {\n    const projectId = useProjectIdInUrl();\n    const { mutateAsync, isLoading, error } = useAddEpic(useEpicQueryKey());\n    const [form] = useForm();\n\n    const onFinish = async (values) => {\n        await mutateAsync({ projectId, ...values });\n        props.onClose();\n    }\n\n    useEffect(()=>{\n        form.resetFields();\n    },[form, props.visible])\n\n    return <Drawer\n        forceRender={true}\n        placement=\"right\"\n        closable={true}\n        onClose={props.onClose}\n        visible={props.visible}\n        width={'100%'}\n    >\n        <h1>创建任务组</h1>\n        <ErrorBox error={error} />\n        <Form form={form} layout={'vertical'} style={{ width: '40rem' }} onFinish={onFinish}>\n            <Form.Item label={'名称'} name={'name'} rules={[{ required: true, message: '请输入任务名称' }]}>\n                <Input placeholder={'请输入名称'} />\n            </Form.Item>\n            <Form.Item style={{ textAlign: \"right\" }}>\n                <Button loading={isLoading} type={'primary'} htmlType={'submit'}>提交</Button>\n            </Form.Item>\n        </Form>\n    </Drawer>\n}","import { useProjectInUrl } from \"screens/kanban/util\";\nimport { Row, ScreenContainer } from \"components/lib\";\nimport { Button, List, Modal, Spin } from \"antd\";\nimport { useState } from \"react\";\nimport { EpicModal } from './epic-modal';\nimport { useDocumentTitle } from \"utils\";\nimport { useDeleteEpic, useEpics } from \"utils/epic\";\nimport dayjs from \"dayjs\";\nimport { Epic } from \"type/epic\";\nimport { useEpicQueryKey } from \"./util\";\nimport { useTask } from \"utils/task\";\nimport { Link } from \"react-router-dom\";\n\nexport const EpicScreen = () => {\n  useDocumentTitle('任务组列表');\n\n  const [epicModalOpen, setModalOpen] = useState(false)\n  const { data: project } = useProjectInUrl();\n  const { data: epics, isLoading } = useEpics({ projectId: project?.id });\n  const { mutateAsync: deleteEpic } = useDeleteEpic(useEpicQueryKey());\n  const { data: tasks } = useTask({ projectId: project?.id })\n\n  const close = () => {\n    setModalOpen(false)\n  }\n\n  const open = () => {\n    setModalOpen(true);\n  }\n\n  const confirmDeleteEpic = (epic: Epic) => {\n    Modal.confirm({\n      title: `确定删除项目组：${epic.name}`,\n      content: \"点击确定删除\",\n      okText: \"确定\",\n      onOk() {\n        deleteEpic({ id: epic.id });\n      }\n    })\n  }\n\n  return (\n    <ScreenContainer>\n      <Row between={true}>\n        <h1>{project?.name}任务组</h1>\n        <Button type={'link'} onClick={open}>创建任务组</Button>\n      </Row>\n      {\n        isLoading ?\n          <Spin size=\"large\" /> :\n          <List\n            style={{ overflow: 'scroll' }}\n            itemLayout=\"vertical\"\n            dataSource={epics}\n            renderItem={epic => (\n              <List.Item>\n                <List.Item.Meta\n                  title={\n                    <Row between={true}>\n                      <span>{epic.name}</span>\n                      <Button onClick={() => confirmDeleteEpic(epic)} type={\"link\"}>\n                        删除\n                      </Button>\n                    </Row>\n                  }\n                  description={\n                    <div>\n                      <div>开始时间：{dayjs(epic.start).format(\"YYYY-MM-DD\")}</div>\n                      <div>结束时间：{dayjs(epic.end).format(\"YYYY-MM-DD\")}</div>\n                    </div>\n                  }\n                />\n                <div>\n                  {\n                    tasks ?\n                      tasks.filter((task) => task.epicId === epic.id)\n                        .map((task) => (\n                          <div>\n                            <Link\n                              key={task.id}\n                              to={`/projects/${project?.id}/kanban?editingTaskId=${task.id}`}\n                            >\n                              {task.name}\n                            </Link>\n                          </div>\n                        ))\n                      :\n                      null\n                  }\n                </div>\n              </List.Item>\n            )} >\n          </List>\n      }\n\n      <EpicModal visible={epicModalOpen} onClose={close} />\n    </ScreenContainer>\n  )\n};\n","import { useQuery } from \"react-query\"\nimport { useHttp } from \"./http\"\nimport { TaskType } from 'type/task-type'\n\nexport const useTaskTypes = () => {\n    const client = useHttp();\n\n    return useQuery<TaskType[]>(['taskTypes'], () => client('taskTypes'));\n}","export default __webpack_public_path__ + \"static/media/task.69774797.svg\";","export default __webpack_public_path__ + \"static/media/bug.5d8e8fd5.svg\";","import { useEffect, useState } from \"react\";\nimport { Card, Input } from \"antd\";\nimport { useAddTask } from \"../../utils/task\";\nimport { useProjectIdInUrl, useTasksQueryKey } from \"./util\";\n\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\n    const [inputMode, setInputMode] = useState(false);\n    const [name, setName] = useState('');\n\n    const { mutateAsync: addTask } = useAddTask(useTasksQueryKey());\n\n    const projectId = useProjectIdInUrl();\n\n    const toggle = () => setInputMode((mode) => !mode);\n\n    const onSubmit = async () => {\n        await addTask({ projectId, kanbanId, name });\n        setInputMode(false);\n    }\n\n    useEffect(() => {\n        if (!inputMode) {\n            setName(\"\");\n        }\n    }, [inputMode]);\n\n    if (!inputMode) {\n        return <div onClick={toggle}>+创建事务</div>\n    }\n\n    return (\n        <Card>\n            <Input\n                value={name}\n                placeholder={'需要做些什么'}\n                autoFocus={true}\n                onChange={(evt) => setName(evt.target.value)}\n                onBlur={toggle}\n                onPressEnter={onSubmit}\n            />\n        </Card>\n    )\n}\n","import { Button, Card, Dropdown, Menu, Modal } from \"antd\";\nimport { useDeleteTask, useTask } from \"utils/task\";\nimport { useTaskTypes } from \"utils/task-type\";\nimport { Kanban } from \"../../type/kanban\";\nimport { useKanbansQueryKey, useTaskModal, useTaskSearchParams } from \"screens/kanban/util\";\nimport taskIcon from \"assets/task.svg\";\nimport bugIcon from \"assets/bug.svg\";\nimport styled from \"@emotion/styled\";\nimport { Task } from \"type/task\";\nimport { CreateTask } from \"./create-task\";\nimport { Row } from \"components/lib\";\nimport { useDeleteKanban } from \"utils/kanban\";\n\nconst TaskTypeIcon = ({ id }: { id: number }) => {\n    const { data: taskTypes } = useTaskTypes();\n    const name = taskTypes?.find((taskType) => taskType.id === id)?.name\n    if (!name) {\n        return null\n    }\n    return <img alt={''} src={name === 'task' ? taskIcon : bugIcon} />\n}\n\nconst TaskCard = ({ task, keyword }: { task: Task, keyword: string }) => {\n    const arr = task?.name.split(keyword) || [];\n    const { startEdit } = useTaskModal();\n    const editStart = (task: Task) => {\n        startEdit(task.id)\n    }\n\n    return <Card onClick={() => editStart(task)} style={{ marginBottom: \"0.5rem\", cursor: \"pointer\" }} key={task.id}>\n        <p>\n            {\n                !keyword ? task.name :\n                    arr.map((item, index) =>\n                        <span key={index}>{item}\n                            {\n                                index === arr.length - 1 ?\n                                    null :\n                                    <span style={{ color: 'red' }} key={index}>{keyword}</span>\n                            }\n                        </span>)\n            }\n        </p>\n        <TaskTypeIcon id={task.typeId} />\n    </Card>\n}\n\nexport const KanbanColumn = ({ kanban }: { kanban: Kanban }) => {\n    const { data: tasks } = useTask(useTaskSearchParams());\n    const { name: keyword } = useTaskSearchParams();\n    const currentTasks = tasks?.filter((task) => task.kanbanId === kanban.id);\n    return (\n        <Container>\n            <Row between={true}>\n                <h3>{kanban.name}</h3>\n                <More kanban={kanban} />\n            </Row>\n            <TasksContainer>\n                {\n                    currentTasks?.map(task => {\n                        return <TaskCard task={task} key={task.id} keyword={keyword} />\n                    })\n                }\n                <CreateTask kanbanId={kanban.id} />\n            </TasksContainer>\n        </Container>\n    )\n}\n\nconst More = ({ kanban }: { kanban: Kanban }) => {\n    const { mutateAsync: deleteKanban } = useDeleteKanban(useKanbansQueryKey());\n    const startDelete = () => {\n        Modal.confirm({\n            okText: \"确定\",\n            cancelText: \"取消\",\n            title: \"确定删除看板吗\",\n            onOk() {\n                return deleteKanban({ id: kanban.id })\n            }\n        })\n    }\n    return <Dropdown overlay={\n        <Menu>\n            <Menu.Item>\n                <Button type={'link'} onClick={startDelete}>删除</Button>\n            </Menu.Item>\n        </Menu>\n    }>\n        <Button type={'link'}>...</Button>\n    </Dropdown>\n}\n\nexport const Container = styled.div`\n  min-width: 27rem;\n  border-radius: 6px;\n  background-color: rgb(244, 245, 247);\n  display: flex;\n  flex-direction: column;\n  padding: 0.7rem 0.7rem 1rem;\n  margin-right: 1.5rem;\n`;\n\nconst TasksContainer = styled.div`\n  overflow: scroll;\n  flex: 1;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { useHttp } from \"./http\";\nimport { cleanObject } from \"./index\";\nimport { Kanban } from \"../type/kanban\";\nimport { useDeleteConfig } from \"./use-optimistic-options\";\n\nexport const useKanban = (param?: Partial<Kanban>) => {\n    const client = useHttp();\n    return useQuery<Kanban[]>(['kanbans', param],\n        () => client('kanbans', {\n            data: cleanObject(param || {})\n        })\n    )\n};\n\nexport const useKanbanDetail = (id?: number) => {\n    const client = useHttp();\n    return useQuery(\n        ['kanbans', { id }],\n        () => client(`kanbans/${id}`),\n        {\n            enabled: Boolean(id)\n        }\n    )\n}\n\nexport const useDeleteKanban = (queryKey: QueryKey) => {\n    const client = useHttp();\n    return useMutation(\n        ({ id }: { id: number }) =>\n            client(`kanbans/${id}`, {\n                method: \"DELETE\",\n            }),\n        useDeleteConfig(queryKey)\n    )\n}\n\nexport const useAddKanban = (queryKey: QueryKey) => {\n    const client = useHttp();\n    return useMutation(\n        (params: Partial<Kanban>) =>\n            client(`kanbans`, {\n                method: \"POST\",\n                data: params\n            }),\n        useDeleteConfig(queryKey)\n    )\n}\n\nexport const useEditKanban = (queryKey: QueryKey) => {\n    const client = useHttp();\n    return useMutation(\n        (params: Partial<Kanban>) =>\n            client(`kanbans/${params.id}`, {\n                method: \"PATCH\",\n                data: params\n            }),\n        useDeleteConfig(queryKey)\n    )\n}","import { useTaskTypes } from \"../utils/task-type\";\nimport { IdSelect } from \"./id-select\";\n\nexport const TaskTypeSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n    const { data: types } = useTaskTypes();\n    return (\n        <IdSelect options={types || []} {...props} />\n    )\n}","import { Button, Input } from 'antd';\nimport { Row } from \"../../components/lib\";\nimport { useTaskSearchParams } from \"./util\";\nimport { useSetSearchUrlParam } from \"../../utils/useUrlQueryParam\";\nimport { TaskTypeSelect } from '../../components/task-type-select';\nimport { UserSelect } from '../../components/user-select';\n\nexport const SearchPanel = () => {\n    const searchParams = useTaskSearchParams();\n    const setSearchParams = useSetSearchUrlParam();\n    return (\n        <Row gap={true} marginBottom={4}>\n            <Input\n                style={{ width: '200px' }}\n                placeholder={'任务名'}\n                value={searchParams.name}\n                onChange={(evt) => setSearchParams({ name: evt.target.value })}\n            />\n            <UserSelect\n                defaultOptionName={\"经办人\"}\n                value={searchParams.processorId}\n                onChange={(id) => setSearchParams({ processorId: id })}\n            />\n            <TaskTypeSelect\n                defaultOptionName={\"类型\"}\n                value={searchParams.typeId}\n                onChange={(id) => setSearchParams({ typeId: id })}\n            />\n            <Button onClick={() => setSearchParams({ name: '', processorId: '', typeId: '' })}>清除筛选器</Button>\n        </Row>\n    )\n}","import React from \"react\";\nimport { IdSelect } from \"components/id-select\";\nimport { useEpics } from \"../utils/epic\";\n\nexport const EpicSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: epics } = useEpics();\n  return <IdSelect options={epics || []} {...props} />;\n};","import { useEffect } from \"react\";\nimport { useTaskModal, useTasksQueryKey } from \"../../screens/kanban/util\";\nimport { useDeleteTask, useEditTask } from \"../../utils/task\";\nimport { Button, Form, Input, Modal } from \"antd\";\nimport { UserSelect } from \"../../components/user-select\";\nimport { TaskTypeSelect } from \"../../components/task-type-select\";\nimport { EpicSelect } from \"../../components/epic-select\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nexport const TaskModal = () => {\n  const [form] = Form.useForm();\n  const { editingTaskId, editingTask, close } = useTaskModal();\n  const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(\n    useTasksQueryKey()\n  );\n  const { mutate: deleteTask } = useDeleteTask(useTasksQueryKey());\n\n  const onCancel = () => {\n    close();\n    form.resetFields();\n  };\n\n  const onOk = async () => {\n    await editTask({ ...editingTask, ...form.getFieldsValue() });\n    close();\n  };\n\n  const startDelete = () => {\n    close();\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      title: \"确定删除任务吗\",\n      onOk() {\n        return deleteTask({ id: Number(editingTaskId) });\n      },\n    });\n  };\n\n  useEffect(() => {\n    form.setFieldsValue(editingTask);\n  }, [form, editingTask]);\n\n  return (\n    <Modal\n      forceRender={true}\n      onCancel={onCancel}\n      onOk={onOk}\n      okText={\"确认\"}\n      cancelText={\"取消\"}\n      confirmLoading={editLoading}\n      title={\"编辑任务\"}\n      visible={!!editingTaskId}\n    >\n      <Form {...layout} initialValues={editingTask} form={form}>\n        <Form.Item\n          label={\"任务名\"}\n          name={\"name\"}\n          rules={[{ required: true, message: \"请输入任务名\" }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item label={\"任务组\"} name={\"epicId\"}>\n          <EpicSelect defaultOptionName={\"任务组\"} />\n        </Form.Item>\n        <Form.Item label={\"经办人\"} name={\"processorId\"}>\n          <UserSelect defaultOptionName={\"经办人\"} />\n        </Form.Item>\n        <Form.Item label={\"类型\"} name={\"typeId\"}>\n          <TaskTypeSelect />\n        </Form.Item>\n      </Form>\n      <div style={{ textAlign: \"right\" }}>\n        <Button\n          onClick={startDelete}\n          style={{ fontSize: \"14px\" }}\n          size={\"small\"}\n        >\n          删除\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n","import { Input } from \"antd\";\nimport { useState } from \"react\";\nimport { useAddKanban } from \"utils/kanban\";\nimport { Container } from \"./kanban-column\";\nimport { useKanbansQueryKey, useProjectIdInUrl, useProjectInUrl } from \"./util\";\n\nexport const CreateKanban = () => {\n    const [name, setName] = useState('');\n\n    const { mutateAsync } = useAddKanban(useKanbansQueryKey());\n    const projectId = useProjectIdInUrl();\n    const addKanban = async () => {\n        await mutateAsync({ name, projectId })\n        setName('')\n    }\n    return (\n        <Container>\n            <Input\n                placeholder={'新建看板'}\n                size={\"large\"}\n                onPressEnter={addKanban}\n                value={name}\n                onChange={(evt) => setName(evt.target.value)}\n            />\n        </Container>\n    )\n}","import styled from '@emotion/styled';\nimport { useDocumentTitle } from 'utils';\nimport { KanbanColumn } from './kanban-column';\nimport { useProjectInUrl, useKanbanSearchParams } from './util';\nimport { useKanban } from \"utils/kanban\";\nimport { SearchPanel } from './search-panel';\nimport { ScreenContainer } from \"components/lib\";\nimport { TaskModal } from './task-modal';\nimport { CreateKanban } from './create-kanban';\n\nexport const KanbanScreen = () => {\n  useDocumentTitle('看板列表');\n  const { data: kanbans } = useKanban(useKanbanSearchParams());\n  const { data: project } = useProjectInUrl();\n  return (\n    <ScreenContainer>\n      <h1>{project?.name}看板</h1>\n      <SearchPanel />\n      <Container>\n        {\n          kanbans?.map(kanban => {\n            return <KanbanColumn kanban={kanban} key={kanban.id} />\n          })\n        }\n        <CreateKanban />\n      </Container>\n      <TaskModal />\n    </ScreenContainer>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  flex: 1;\n`","import { Navigate, Route, Routes, useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { EpicScreen } from \"screens/epic\";\nimport { KanbanScreen } from \"screens/kanban\";\nimport styled from \"@emotion/styled\";\nimport { Menu } from \"antd\";\n\nconst useRouteType = () => {\n  const units = useLocation().pathname.split(\"/\");\n  return units[units.length - 1];\n};\n\nexport const ProjectDetail = () => {\n  const routeType = useRouteType();\n\n  return (\n    <Container>\n      <Aside>\n        <Menu mode={\"inline\"} selectedKeys={[routeType]}>\n          <Menu.Item key={\"kanban\"}>\n            <Link to={\"kanban\"}>看板</Link>\n          </Menu.Item>\n          <Menu.Item key={\"epic\"}>\n            <Link to={\"epic\"}>任务组</Link>\n          </Menu.Item>\n        </Menu>\n      </Aside>\n      <Main>\n        <Routes>\n          <Route path={\"/kanban\"} element={<KanbanScreen />} />\n          <Route path={\"/epic\"} element={<EpicScreen />} />\n          <Navigate to={window.location.pathname + \"/kanban\"} replace={true} />\n        </Routes>\n      </Main>\n    </Container>\n  );\n};\n\nconst Aside = styled.aside`\n  background-color: rgb(244, 245, 247);\n  display: flex;\n`;\n\nconst Main = styled.div`\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\n  display: flex;\n  overflow: hidden;\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 16rem 1fr;\n`;","import { Button, Drawer, Form, Input, Spin } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { ErrorBox } from \"components/lib\";\nimport { UserSelect } from \"components/user-select\";\nimport { useEffect } from \"react\";\nimport { useProjectModal, useProjectQueryKey } from \"screens/project-list/util\";\nimport { useAddProject, useEditProject } from \"utils/project\";\n\nexport const ProjectModal = () => {\n  const { projectModalOpen, close, editingProject, startEdit, isLoading } = useProjectModal();\n  const [form] = useForm();\n\n  const useMutateProject = editingProject ? useEditProject : useAddProject\n  const { mutateAsync, isLoading: mutateLoading, error } = useMutateProject(useProjectQueryKey())\n\n  const onFinish = (values: any) => {\n    mutateAsync({ ...editingProject, ...values }).then(() => {\n      form.resetFields()\n      close()\n    })\n  }\n\n  const onClose = () => {\n    form.resetFields()\n    close()\n  }\n\n  useEffect(() => {\n    form.setFieldsValue(editingProject)\n  }, [editingProject, form])\n\n  const title = editingProject ? '编辑项目' : '创建项目'\n  return (\n    <Drawer\n      forceRender={true}\n      closable={true}\n      onClose={onClose}\n      visible={projectModalOpen}\n      width={'100%'}\n    >\n      {\n        isLoading ?\n          (\n            <Spin size={'large'} />\n          ) :\n          (\n            <>\n              <h1>{title}</h1>\n              <ErrorBox error={error} />\n              <Form form={form} layout={'vertical'} style={{ width: '40rem' }} onFinish={onFinish}>\n                <Form.Item label={'名称'} name={'name'} rules={[{ required: true, message: '请输入名称' }]}>\n                  <Input placeholder={'请输入名称'} />\n                </Form.Item>\n                <Form.Item label={'部门'} name={'organization'} rules={[{ required: true, message: '请输入部门名称' }]}>\n                  <Input placeholder={'请输入部门名称'} />\n                </Form.Item>\n                <Form.Item label={'负责人'} name={'personId'} rules={[{ required: true, message: '请选择负责人' }]}>\n                  <UserSelect defaultOptionName={'负责人'} />\n                </Form.Item>\n                <Form.Item style={{ textAlign: \"right\" }}>\n                  <Button loading={mutateLoading} type={'primary'} htmlType={'submit'}>提交</Button>\n                </Form.Item>\n              </Form>\n            </>\n          )\n      }\n\n    </Drawer>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Popover, List, Typography, Divider } from \"antd\";\nimport { useProjectModal } from \"screens/project-list/util\";\nimport { useProject } from \"utils/project\";\nimport { ButtonNoPadding } from \"./lib\";\nexport const ProjectPopover = () => {\n  const { data: projects, refetch } = useProject();\n  const { open } = useProjectModal();\n  const pinProjects = projects?.filter((item) => item.pin);\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={\"secondary\"}>收藏项目</Typography.Text>\n      <List>\n        {pinProjects?.map((project) => (\n          <List.Item key={project.id}>\n            <List.Item.Meta title={project.name} />\n          </List.Item>\n        ))}\n      </List>\n      <Divider />\n      <ButtonNoPadding type={\"link\"} onClick={open}>创建</ButtonNoPadding>\n    </ContentContainer>\n  );\n  return (\n    <Popover onVisibleChange={() => refetch()} content={content} placement=\"bottom\" title=\"项目\">\n      <span>项目</span>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 20rem;\n`;\n","import styled from \"@emotion/styled\";\nimport { Popover, List, Typography, Divider } from \"antd\";\nimport { useUsers } from \"../utils/user\";\nexport const UserPopover = () => {\n  const { data: users, refetch } = useUsers();\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={\"secondary\"}>组员列表</Typography.Text>\n      <List>\n        {users?.map((user) => (\n          <List.Item key={user.id}>\n            <List.Item.Meta title={user.name} />\n          </List.Item>\n        ))}\n      </List>\n      <Divider />\n    </ContentContainer>\n  );\n  return (\n    <Popover onVisibleChange={() => refetch()} content={content} placement=\"bottom\" title=\"项目\">\n      <span>组员</span>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 20rem;\n`;\n","export default __webpack_public_path__ + \"static/media/software-logo.ec204298.svg\";","import { useAuth } from \"context/auth-context\";\nimport styled from \"@emotion/styled\";\nimport { Row } from \"components/lib\";\nimport { Button, Dropdown, Menu } from \"antd\";\nimport { Navigate, Route, Routes } from \"react-router\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ProjectListScreen } from \"screens/project-list\";\nimport FormSizeDemo from './screens/formlist';\nimport { ProjectDetail } from \"screens/project\";\nimport { ProjectModal } from \"screens/project/project-modal\";\nimport { ProjectPopover } from \"components/project-popover\";\nimport { UserPopover } from \"components/user-popover\";\nimport logo from 'assets/software-logo.svg';\n\n/**\n * grid 和 flex 各自的应用场景\n * 1. 要考虑，是一维布局 还是 二维布局\n * 一般来说，一维布局用flex，二维布局用grid\n * 2. 是从内容出发还是从布局出发？\n * 从内容出发：你先有一组内容(数量一般不固定),然后希望他们均匀的分布在容器中，由内容自己的大小决定占据的空间\n * 从布局出发：先规划网格(数量一般比较固定)，然后再把元素往里填充\n * 从内容出发，用flex\n * 从布局出发，用grid\n *\n */\n\n// prop drilling\n\nexport const AuthenticatedApp = () => {\n  return (\n    <Container>\n      <Router>\n        <PageHeader />\n        <Main>\n          <Routes>\n            <Route path={\"/projects\"} element={<ProjectListScreen />} />\n            <Route\n              path={\"/projects/:projectId/*\"}\n              element={<ProjectDetail />}\n            />\n            <Route path={\"/forms\"} element={<FormSizeDemo />} />\n            <Navigate to={\"/forms\"} />\n          </Routes>\n        </Main>\n        <ProjectModal />\n      </Router>\n    </Container>\n  );\n};\n\nconst PageHeader = (props) => {\n  const resetRoute = () => {\n    window.location.href = window.location.origin;\n  };\n  const goForm = () => {\n    console.log(8999)\n    console.log(props)\n  }\n  return (\n    <Header between={true}>\n      <HeaderLeft gap={true}>\n        <img onClick={resetRoute} style={{ width: '200px', cursor: 'pointer' }} alt={''} src={logo} />\n        <span onClick={resetRoute}>首页</span>\n        <ProjectPopover />\n        <UserPopover />\n        <span onClick={goForm}>表单</span>\n      </HeaderLeft>\n      <HeaderRight>\n        <User />\n      </HeaderRight>\n    </Header>\n  );\n};\n\nconst User = () => {\n  const { logout, user } = useAuth();\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item key={\"logout\"}>\n            <Button onClick={logout} type={\"link\"}>\n              登出\n            </Button>\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <Button type={\"link\"} onClick={(e) => e.preventDefault()}>\n        Hi, {user?.name}\n      </Button>\n    </Dropdown>\n  );\n};\n\n// temporal dead zone(暂时性死区)\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 7rem 1fr;\n  height: 100vh;\n`;\n\n// grid-area 用来给grid子元素起名字\nconst Header = styled(Row)`\n  padding: 3.2rem;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\n  z-index: 1;\n`;\nconst HeaderLeft = styled(Row)`\n  & > span {\n    cursor: pointer;\n  }\n`;\nconst HeaderRight = styled.div``;\nconst Main = styled.main`\n  display: flex;\n  overflow: hidden;\n  padding: 0;\n  & > div {\n    width: 100%;\n  }\n`;\n","/*\n * @Author: your name\n * @Date: 2021-06-16 09:59:33\n * @LastEditTime: 2021-09-12 21:41:16\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /react-jira/src/index.tsx\n */\nimport \"./wdyr\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import { loadServer, DevTools } from \"jira-dev-tool\";\nimport \"antd/dist/antd.less\";\nimport { AppProviders } from \"./context\";\nimport { AuthenticatedApp } from './authenticated-app';\n\n// loadServer(() =>\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        {/* <DevTools /> */}\n        <AuthenticatedApp />\n      </AppProviders>\n      ,\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  )\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}